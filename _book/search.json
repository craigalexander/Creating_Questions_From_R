[{"path":"index.html","id":"overview","chapter":"1 Overview","heading":"1 Overview","text":"session, take look can use R generate data create questions. first example work question 1 Paper 1 2021 exam. can access paper solutions clicking links. second example introduce generate data simple linear model.","code":""},{"path":"index.html","id":"libraries","chapter":"1 Overview","heading":"1.1 Libraries","text":"Throughout tutorial, use libraries within R. prefer work examples R, need install following libraries:tidyversetruncnormgridExtraBSDA","code":""},{"path":"paper-1-example.html","id":"paper-1-example","chapter":"2 2021 Paper 1 Example","heading":"2 2021 Paper 1 Example","text":"","code":""},{"path":"paper-1-example.html","id":"question-1","chapter":"2 2021 Paper 1 Example","heading":"2.1 Question 1","text":"example, take look question 1 Paper 1 2021. question report style question based Google AI data times taken draw cat dog. example contains stem leaf diagram combined data summary statistics sets drawings. Following , Mann-Whitney Test carried test whether samples different average drawing times.now look can draw sample data question, randomly sampling data groups using properties summary statistics","code":""},{"path":"paper-1-example.html","id":"generating-a-random-sample-of-data","chapter":"2 2021 Paper 1 Example","heading":"2.1.1 Generating a random sample of data","text":"can generate random sample data categories using summary statistics provided. can see stem leaf diagram, data lower bound, observe data zero, data recorded based time elapsed.order sample data form, can use variation Normal distribution called truncated normal distribution, allows us bound Normal distribution given range.randomly sample data distribution, can use rtruncnorm function truncnorm package R follows:parameters required defined follows:n - number samples wish drawa - lower bound distribution (, set 0)b - upper bound distribution (, set ceiling max value group)mean - mean groupsd - standard deviation groupRunning code produce sample groups based relative summary statistics. can check summary statistics data using summary()","code":"\nsample_dog <- rtruncnorm(n=145, a=0, b=16, mean=7.5, sd=2.66)\nsample_cat <- rtruncnorm(n=121, a=0, b=14, mean=5.4, sd=2.31)\nsummary(sample_dog)##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##   1.260   5.420   6.979   7.172   8.846  14.280\nsummary(sample_cat)##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##  0.5993  4.5442  5.9961  5.8839  6.9648 12.4311"},{"path":"paper-1-example.html","id":"visualising-the-data","chapter":"2 2021 Paper 1 Example","heading":"2.1.2 Visualising the data","text":"can also check distribution sampled data comparison visualising using histogram. ggplot2 library found tidyverse library provides several functions data visualisation become popular base R graphics. use geom_histogram() function library example follows:create histograms, code works following fashion:first specify data using ggplot(data), data either group samples.specify variables like select, use aes() argument. one sample data case, specify using x=data.generate histogram using geom_histogram(), can define line colour using color filled colour bars using fill.can label plot using labs argument, can include title x axis labelWe can also alter number bins use (ggplot set standard number bins default) using bins argument. Let’s alter number bins dog data 10","code":"\ndog_hist <- ggplot(data.frame(sample_dog),aes(x=sample_dog)) + geom_histogram(color=\"black\",fill=\"white\") + \n            labs(title=\"Average draw time of dogs\",x=\"Time (s)\")\ncat_hist <- ggplot(data.frame(sample_cat),aes(x=sample_cat)) + geom_histogram(color=\"black\",fill=\"white\") + \n  labs(title=\"Average draw time of cats\",x=\"Time (s)\")\n\ngrid.arrange(dog_hist,cat_hist,ncol=2)## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\ndog_hist <- ggplot(data.frame(sample_dog),aes(x=sample_dog)) + geom_histogram(color=\"black\",fill=\"white\",bins=10) + \n  labs(title=\"Average draw time of dogs\",x=\"Time (s)\")"},{"path":"paper-1-example.html","id":"setting-random-seeds-for-reproducability","chapter":"2 2021 Paper 1 Example","heading":"2.1.3 Setting random seeds for reproducability","text":"randomly sample data time R, obtain different sample . Let’s run previous code twice see differences:see samples produce different summary statistics. can cause difficulty working specific problem want design questions around specific characteristics data sampled first time.can force R use random number generation using set.seed() function. , specify seed random number generator want use time generate samples. number can number wish choose! example highlights works:, see can produce data first sample setting seed prior sampling.","code":"\nsample_dog1 <- rtruncnorm(n=145, a=0, b=16, mean=7.5, sd=2.66)\nsample_dog2 <- rtruncnorm(n=145, a=0, b=16, mean=7.5, sd=2.66)\n\nsummary(sample_dog1)##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##  0.4464  5.7736  7.3936  7.5150  9.2837 13.4899\nsummary(sample_dog2)##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##  0.2391  5.3456  7.5616  7.4537  9.2504 13.4568\nset.seed(2023)\nsample_dog1 <- rtruncnorm(n=145, a=0, b=16, mean=7.5, sd=2.66)\nset.seed(2023)\nsample_dog2 <- rtruncnorm(n=145, a=0, b=16, mean=7.5, sd=2.66)\n\nsummary(sample_dog1)##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##   2.006   6.316   7.545   7.798   9.365  14.776\nsummary(sample_dog2)##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##   2.006   6.316   7.545   7.798   9.365  14.776"},{"path":"paper-1-example.html","id":"manually-editing-data","chapter":"2 2021 Paper 1 Example","heading":"2.1.4 Manually editing data","text":"take sample data perhaps wish add additional variables mimic original data closer, can easily done R. Let’s take sample dog data lower boundary 14 visualiseWhen comparing original data paper, see observe two outliers 14.3 seconds 15.2 seconds. can manually add values follows:\nnow observe two additional values histogram. vector data, can easily add new values using c() command. can done specifying original data first, including additional variables new c() object. wish add one value, need use c().","code":"\nsample_dog <- rtruncnorm(n=145, a=0, b=14, mean=7.5, sd=2.66)\n\nggplot(data.frame(sample_dog),aes(x=sample_dog)) + geom_histogram(color=\"black\",fill=\"white\",bins=12) + \n            labs(title=\"Average draw time of dogs\",x=\"Time (s)\")\nsample_dog <- c(sample_dog, c(14.3,15.2))\n\nggplot(data.frame(sample_dog),aes(x=sample_dog)) + geom_histogram(color=\"black\",fill=\"white\",bins=12) + \n            labs(title=\"Average draw time of dogs\",x=\"Time (s)\")"},{"path":"paper-1-example.html","id":"sampling-from-different-distributions","chapter":"2 2021 Paper 1 Example","heading":"2.1.5 Sampling from different distributions","text":"case, data shown roughly takes form Normal distribution. several cases may appropriate distribution. R contains full range different distributions can sample . common choices shown :rbinom() - Sample Binomial distributionrchisq() - Sample Chi-squared distributionrgamma() - Sample Gamma distributionrunif() - Sample Uniform distributionrexp() - Sample Exponential distributionThis list exhaustive, R contain libraries allow sampling almost known distribution.","code":""},{"path":"paper-1-example.html","id":"performing-a-mann-whitney-test","chapter":"2 2021 Paper 1 Example","heading":"2.1.6 Performing a Mann-Whitney Test","text":"can carry Mann-Whitney test R followsThe output test gives us rank sum W p-value can used question creation","code":"\nsample_dog <- rtruncnorm(n=145, a=0, b=16, mean=7.5, sd=2.66)\nsample_cat <- rtruncnorm(n=121, a=0, b=14, mean=5.4, sd=2.31)\n\nmann_whitney <- wilcox.test(sample_dog,sample_cat)\nmann_whitney## \n##  Wilcoxon rank sum test with continuity correction\n## \n## data:  sample_dog and sample_cat\n## W = 12823, p-value = 9.048e-11\n## alternative hypothesis: true location shift is not equal to 0"},{"path":"paper-1-example.html","id":"performing-a-z-test","chapter":"2 2021 Paper 1 Example","heading":"2.2 Performing a z-test","text":"can perform two-sample z test R using z.test function BSDA package. can carry test follows:, specify sample standard deviation cats dogs respectively. output test gives us z-statistic, p-value 95% confidence interval.","code":"\nz.test(sample_cat,sample_dog,sigma.x=2.307,sigma.y=2.655)## \n##  Two-sample z-Test\n## \n## data:  sample_cat and sample_dog\n## z = -6.7694, p-value = 1.293e-11\n## alternative hypothesis: true difference in means is not equal to 0\n## 95 percent confidence interval:\n##  -2.656354 -1.463513\n## sample estimates:\n## mean of x mean of y \n##  5.308262  7.368196"},{"path":"linear-model-example.html","id":"linear-model-example","chapter":"3 Linear model example","heading":"3 Linear model example","text":"section introduce generate data linear model example using linear model equation.example based following question.","code":""},{"path":"linear-model-example.html","id":"question","chapter":"3 Linear model example","heading":"3.1 Question","text":"global ice cream company interested using linear regression predict ice cream waste (kg) based average temperatures store locations (\\(^{\\circ}\\)C).estimated linear model :\\[\\hat{waste} = 597 - 10.91 \\times temperature.\\]predicted waste store location whose average temperature 18\\(^{\\circ}\\)C?predicted waste store location whose average temperature 18\\(^{\\circ}\\)C?standard error slope coefficient 0.92, associated \\(df=32\\). Calculate 95% confidence interval slope parameter.standard error slope coefficient 0.92, associated \\(df=32\\). Calculate 95% confidence interval slope parameter.","code":""},{"path":"linear-model-example.html","id":"question-3","chapter":"3 Linear model example","heading":"Question 3","text":"Suppose performed hypothesis test test average temperature significant predictor ice cream waste. Working significance level 5%, expect p-value hypothesis test :tell information providedgreater 0.05less 0.05","code":""},{"path":"linear-model-example.html","id":"generating-data","chapter":"3 Linear model example","heading":"3.2 Generating data","text":"order fit linear model need generate two variables:Response variable (\\(y\\)): \\(waste\\) andExplanatory variable (\\(x\\)): \\(temperature\\).Crucially, variables need associated shown linear model equation.","code":""},{"path":"linear-model-example.html","id":"explanatory-variable","chapter":"3 Linear model example","heading":"3.2.1 Explanatory variable","text":"Let’s start generating x-variable, \\(temperature\\). use Normal distribution since variable continuous.parameters required defined follows:n - number samples wish draw. question \\(df=32\\), \\(n=34\\) (since simple linear model \\(df=n-2\\)).mean - mean temperature data centered . Pick something sensible , gone \\(12^{\\circ}\\)C.sd - standard deviation \\(temperature\\). go something seems sensible (high enough show variability, high values extreme longer sensible). can take bit trial error.Let’s take look simulated data check looks sensible. geom_histogram() function used previous example.Exercise\nChange values mean sd code plot histogram newly simulated \\(x\\) value see data changes.","code":"\ntemp<-rnorm(n=34, mean=12, sd=4)\nggplot(data.frame(temp),aes(x=temp)) + \n  geom_histogram(color=\"black\",fill=\"white\", bins=10) + \n            labs(x=\"Average temperature\")"},{"path":"linear-model-example.html","id":"using-a-linear-model-to-generate-the-response","chapter":"3 Linear model example","heading":"3.2.2 Using a linear model to generate the response","text":"order generate response variable \\(y\\) need choose sensible linear model relate explantory variable \\(x\\) response variable \\(y\\).specify simple linear model need choose two values, intercept, \\(\\alpha\\), slope, \\(\\beta\\). example want estimate ice cream waste average temperature, therefore going assume negative relationship variables, .e. warmer , ice cream sell! Therefore, slope parameter (\\(\\beta\\)) negative. size depend think sensible interpretation. let’s go -10.65, every unit increase average temperature, ice cream waste decreases 10.65kg. intercept, think sensible value based context. Remember value regression line cut y-axis. Let’s choose 591. choice \\(\\alpha\\) \\(\\beta\\) subjective, might take trial error deciding final values. Just make sure interpretation final model sensible.can now generate response variable, \\(y\\) follows:where591 chosen value \\(\\alpha\\),-10.65 chosen value \\(\\beta\\),temp x-variable already simulated.Let’s now produce scatterplot data using ggplot2. use similar structure plots produced previously use geom_point() function produce scatterplot follows:create scatterplot first store two variables dataframe called data. creating dataframe two columns given names two data vectors already created, namely waste temp. columns simply storing data vectors simulated . create scatterplot works follows:First specify data using ggplot(data).specify variables want plot using aes() argument, x=temp y=waste.generate scatterplot using geom_point(). used default values don’t need specify anything within function.Finally, label x y axis using labs function.Now, may noticed scatterplot identified issue data generated. code used produced perfect linear relationship \\(temperature\\) \\(waste\\). seem realistic need add random noise \\(y\\). can adding randomly generated values normal distribution mean 0. Think adding residuals model.always want model residuals centered 0, mean within rnorm() 0. level variability within \\(y\\) can controlled via standard deviation (sd). , might take trial error get something happy .Let’s take look scatterplot newly generated response.looks better!Exercise\n1. Change values \\(\\alpha\\) \\(\\beta\\) code see relationship \\(x\\) \\(y\\) changes.\n2. Alter value sd code control level variation \\(y\\).","code":"\nwaste<-591 - 10.65*temp\ndata<-data.frame(waste=waste, temp=temp)\n\nggplot(data, aes(x=temp, y=waste)) + \n  geom_point() + \n  labs(x=\"Average temperature\", y=\"Ice cream waste\")\nwaste<-591 - 10.65*temp + rnorm(n=34, mean=0, sd=20)\ndata<-data.frame(waste=waste, temp=temp)\n\nggplot(data, aes(x=temp, y=waste)) + \n  geom_point() + \n  labs(x=\"Average temperature\", y=\"Ice cream waste\")"},{"path":"linear-model-example.html","id":"fitting-a-linear-model","chapter":"3 Linear model example","heading":"3.3 Fitting a linear model","text":"Now simulated values \\(temperature\\) \\(waste\\) can now fit linear model generate output can used create questions.Note estimates \\(\\alpha\\) \\(\\beta\\) slightly different values used generate data. random noise added generating response variable. values fairly similar though. Notice values correspond linear model used question top page, used standard error output table asking 95% CI slope parameter (although may beyond scope AH stats cirriculum).","code":"\nmodel<-lm(waste~temp)\nsummary(model)## \n## Call:\n## lm(formula = waste ~ temp)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -38.514 -11.412  -2.084  10.421  45.052 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) 596.9391    11.8702   50.29  < 2e-16 ***\n## temp        -10.9101     0.9153  -11.92 2.62e-13 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 18.85 on 32 degrees of freedom\n## Multiple R-squared:  0.8162, Adjusted R-squared:  0.8104 \n## F-statistic: 142.1 on 1 and 32 DF,  p-value: 2.62e-13"},{"path":"linear-model-example.html","id":"adding-the-linear-model-line-to-a-scatterplot","chapter":"3 Linear model example","heading":"3.4 Adding the linear model line to a scatterplot","text":"can now add fitted model 95% confidence interval scatterplot data using following code.generate plot used code previously added geom_smooth() following arguments:method = lm - fit linear model line plot.se = TRUE - display confidence interval around line. can removed setting se=FALSE.","code":"\nggplot(data, aes(x=temp, y=waste)) + \n  geom_point() + \n  labs(x=\"Average temperature\", y=\"Ice cream waste\")+\n  geom_smooth(method=\"lm\", se=TRUE)## `geom_smooth()` using formula = 'y ~ x'"},{"path":"linear-model-example.html","id":"producing-model-diagnostics","chapter":"3 Linear model example","heading":"3.5 Producing model diagnostics","text":"can use autoplot() function ggfortify library create diagnostic plots linear model using ggplot2 follows:","code":"\nautoplot(model)"},{"path":"linear-model-example.html","id":"calculating-quantities-of-interest","chapter":"3 Linear model example","heading":"3.6 Calculating quantities of interest","text":"can also calculate quantities \\(S_{xx}, S_{yy}\\) \\(S_{xy}\\) used questions calcuating estimates hand.","code":"\nS.xx <- sum((temp - mean(temp))^2)\nS.yy <- sum((waste - mean(waste))^2)\nS.xy <- sum((temp - mean(temp)) * (waste - mean(waste)))\n\nr <- S.xy/(sqrt(S.xx*S.yy))\nbeta <- S.xy/S.xx\nalpha <- mean(waste) - beta*mean(temp)\n\nr## [1] -0.9034156\nbeta## [1] -10.91007\nalpha## [1] 596.9391"},{"path":"linear-model-example.html","id":"summary","chapter":"3 Linear model example","heading":"3.7 Summary","text":"Using R generate data can quick simple way create practice questions students. can also helpful demonstrate certain properties introducing concepts class. Another benefit allow creation multiple variants question, slighty different data, therefore slightly different answers. can particularly helpful revision questions students can attempt , assessments students slightly different questions/answers.However, general advise using real data introducing/demonstrating concepts class allows students appreciate use statistics real-life scenarios also allows discussions around dealing messy data.","code":""}]
